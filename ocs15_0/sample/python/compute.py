#
# Copyright Notice and Disclaimer
# -------------------------------
#       (c) Copyright 2012. 
#       Sybase, Inc. All rights reserved.  
#       Unpublished rights reserved under U.S. copyright laws.
#       This material is the confidential and trade secret information of
#       Sybase, Inc.
#
#       Sybase grants Licensee a non-exclusive license to use, reproduce, 
#       modify, and distribute the sample source code below (the "Sample Code"),
#       subject to the following conditions: 
#
#       (i) redistributions must retain the above copyright notice; 
#
#       (ii) Sybase shall have no obligation to correct errors or deliver 
#       updates to the Sample Code or provide any other support for the 
#       Sample Code; 
#
#       (iii) Licensee may use the Sample Code to develop applications 
#       (the "Licensee Applications") and may distribute the Sample Code in 
#       whole or in part as part of such Licensee Applications, however in no 
#       event shall Licensee distribute the Sample Code on a standalone basis; 
#
#       (iv) and subject to the following disclaimer:
#       THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
#       INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
#       AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL 
#       SYBASE, INC. OR ITS LICENSORS BE LIABLE FOR ANY DIRECT, INDIRECT, 
#       INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, 
#       BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS 
#       OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND 
#       ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR 
#       TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE 
#       USE OF THE SAMPLE CODE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH 
#       DAMAGE.
#
#
# Description
# -----------  
# 	This example demonstrates processing compute results.  It sends a
# 	query to the server. It then fetches the rows, including compute
#	results.
#
# 	This is the query:
# 	select type, price from titles where type like "%cook" 
# 	order by type, price 
# 	compute sum(price) by type 
# 	compute sum(price)
#
# 	This query returns both regular rows and compute rows.  The compute
# 	rows are generated by the 2 compute clauses.  The first compute
# 	clause, 'compute sum(price) by type' generates a compute row each
# 	time the value of type changes.  The second compute clause 'compute
# 	sum(price)' generates one compute row which is the last to be 
# 	returned.
#      
# Inputs
# ------         
# 	None.
#      
# Server Tables
# -------------  
# 	This program requires the pubs2 database.
# 


import sybpydb


def handle_resultset(cur):
    desc = cur.description
    #Get the rows
    print ("\n\n%s\t\t%s" % (desc[0][0], desc[1][0])) 
    print ("------------    -------")
    while True:
        row = cur.fetchone()
        if (not row):
            break
        print ("%s\t%s" % (row[0], row[1]))

    # Get the sum
    cur.nextset()
    row = cur.fetchone()
    print ("\nsum")
    print ("---")
    print (row[0])
    cur.nextset()



conn = sybpydb.connect(user='sa', password='')
cur = conn.cursor()
cur.execute("""
    select type, price from pubs2..titles
    where type like \"%cook\" 
    order by type, price
    compute sum(price) by type
    compute sum(price)
    """)
handle_resultset(cur)
handle_resultset(cur)

# Get the sum
row = cur.fetchone()
print ("\n\ngrand sum")
print ("---------")
print (row[0])
cur.close()
conn.close()
